{"version":3,"sources":["utils/index.ts","features/Cart/cartSlice.ts","features/Header/components/Header/Header.tsx","features/Footer/components/Footer.tsx","layouts/Default.tsx","features/Title/Title.tsx","components/Button/Button.tsx","features/ProductList/components/Product/Product.tsx","components/Loader/Loader.tsx","features/ProductList/api/index.ts","features/ProductList/utils/adapters.ts","features/ProductList/productListSlice.ts","features/ProductList/components/ProductList/ProductList.tsx","pages/index.tsx","features/Cart/components/CartCounter/CartCounter.tsx","features/Cart/components/CartProduct/CartProduct.tsx","components/VisuallyHidden/VisuallyHidden.tsx","components/Modal/Modal.tsx","features/Cart/components/CartModal/CartModal.tsx","features/Cart/components/Cart/Cart.tsx","pages/cart.tsx","App.tsx","index.tsx","app/store.ts"],"names":["numberFix","number","Math","floor","shallowCompare","fistObj","secondObj","Object","keys","length","every","key","hasOwnProperty","cartSlice","createSlice","name","initialState","products","reducers","changeProducts","state","action","payload","addProduct","product","find","id","amount","newProduct","push","deleteProductById","productIndex","findIndex","splice","incrementProductAmountById","decrementProductAmountById","max","actions","selectCartProducts","cart","selectCartTotalSum","totalSum","reduce","price","selectCartTotalAmount","totalAmount","cartReducer","reducer","Header","_props","useSelector","className","activeClassName","exact","to","Footer","DefalutLayout","children","Title","React","forwardRef","ref","rest","useEffect","document","title","Button","Product","image","dispatch","useDispatch","src","alt","onClick","Loader","props","getAllProducts","a","fetch","result","json","getProductsByDealersId","dealers","join","productAdapter","rawProductsData","map","rawProductData","index","productListSlice","isLoading","error","setErrorStarus","setLoadingStatus","setDealers","changeProductsList","productsListReducer","selectProductsList","productsList","selectLoadingStatus","receiveAllProducts","rawProducts","adaptedProducts","toString","receiveProductsByDealersId","ProductList","productList","getState","HomePage","CartCounter","increase","decrease","CartProduct","memo","VisuallyHidden","Modal","isOpen","closeModal","useState","createElement","el","modalRoot","getElementById","body","appendChild","removeChild","style","overflow","createPortal","CartModal","Cart","openModal","setOpenModal","CartPage","App","path","localState","JSON","parse","window","localStorage","getItem","store","configureStore","preloadedState","undefined","subscribe","debounce","serializedStore","stringify","setItem","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.252312d7.chunk.js","sourcesContent":["export const numberFix = (number: number) : number => {\r\n  return Math.floor(number * 100) / 100\r\n}\r\n\r\ntype shallowCompareObjectsType = {\r\n  [propety: string] : any\r\n}\r\n\r\nexport const shallowCompare = (fistObj: shallowCompareObjectsType, secondObj: shallowCompareObjectsType) : boolean => {  \r\n  return Object.keys(fistObj).length === Object.keys(secondObj).length &&\r\n  Object.keys(fistObj).every(key => \r\n    secondObj.hasOwnProperty(key) && fistObj[key] === secondObj[key]\r\n  );\r\n}","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { RootState } from \"app/store\";\r\nimport { ProductType } from \"features/ProductList/productListSlice\";\r\nimport { numberFix } from \"utils/\";\r\n\r\nexport type CartProductType = {\r\n  amount: number;\r\n} & ProductType;\r\n\r\ntype initialStateType = {\r\n  products: CartProductType[];\r\n};\r\n\r\nconst initialState: initialStateType = {\r\n  products: [],\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    changeProducts(state, action: PayloadAction<CartProductType[]>) {\r\n      state.products = action.payload;\r\n    },\r\n\r\n    addProduct(state, action: PayloadAction<ProductType>) {\r\n      const product = state.products.find((product) => {\r\n        return product.id === action.payload.id;\r\n      });\r\n\r\n      if (product) {\r\n        product.amount++;\r\n      } else {\r\n        const newProduct = { ...action.payload, amount: 1 };\r\n        state.products.push(newProduct);\r\n      }\r\n    },\r\n\r\n    deleteProductById(state, action: PayloadAction<string>) {\r\n      const productIndex = state.products.findIndex((product) => {\r\n        return product.id === action.payload;\r\n      });\r\n\r\n      if (productIndex >= 0) {\r\n        state.products.splice(productIndex, 1);\r\n      }\r\n    },\r\n\r\n    incrementProductAmountById(state, action: PayloadAction<string>) {\r\n      const product = state.products.find(\r\n        (product) => product.id === action.payload\r\n      );\r\n      if (product) {\r\n        product.amount++;\r\n      }\r\n    },\r\n    decrementProductAmountById(state, action: PayloadAction<string>) {\r\n      const product = state.products.find(\r\n        (product) => product.id === action.payload\r\n      );\r\n      if (product) {\r\n        product.amount = Math.max(product.amount - 1, 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  incrementProductAmountById,\r\n  decrementProductAmountById,\r\n  addProduct,\r\n  deleteProductById,\r\n  changeProducts,\r\n} = cartSlice.actions;\r\nexport const selectCartProducts = (state: RootState) => state.cart.products;\r\nexport const selectCartTotalSum = (state: RootState) => {\r\n  const totalSum = state.cart.products.reduce((totalSum, product) => {\r\n    return totalSum + product.price * product.amount;\r\n  }, 0);\r\n\r\n  return numberFix(totalSum);\r\n};\r\nexport const selectCartTotalAmount = (state: RootState) => {\r\n  const totalAmount = state.cart.products.reduce((totalAmount, product) => {\r\n    return totalAmount + product.amount;\r\n  }, 0);\r\n\r\n  return numberFix(totalAmount);\r\n};\r\nexport const cartReducer = cartSlice.reducer;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { selectCartTotalAmount } from \"features/Cart/cartSlice\";\r\nimport \"./Header.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ntype HeaderProps = {};\r\n\r\nexport const Header = (_props: HeaderProps) => {\r\n  const totalAmount = useSelector(selectCartTotalAmount);\r\n\r\n  return (\r\n    <header className=\"header container\">\r\n      <nav className=\"header__content\">\r\n        <NavLink\r\n          className=\"header__link\"\r\n          activeClassName=\"header__link--active\"\r\n          exact\r\n          to=\"/\"\r\n        >\r\n          На главную\r\n        </NavLink>\r\n        <span className=\"header__cart\">\r\n          <NavLink\r\n            className=\"header__link header__link--cart\"\r\n            activeClassName=\"header__link--active\"\r\n            to=\"/cart\"\r\n          >\r\n            Корзина\r\n          </NavLink>\r\n          <span className=\"header__cart-amount\">{totalAmount}</span>\r\n        </span>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\ntype FooterProps = {};\r\n\r\nexport const Footer = (_props: FooterProps) => {\r\n  return (\r\n    <footer className=\"container\">\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Header } from \"features/Header\";\r\nimport { Footer } from \"features/Footer\";\r\n\r\ntype DefalutLayoutProps = {\r\n  children: React.ReactChild\r\n};\r\n\r\nexport const DefalutLayout = ({ children } : DefalutLayoutProps) => {\r\n  return (\r\n    <>\r\n      <Header/>\r\n      <main>\r\n        { children }\r\n      </main>\r\n      <Footer/>\r\n      <div id=\"modal-root\"></div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport \"./Title.scss\";\r\n\r\ntype TitlePropsType = {\r\n  children: string;\r\n} & React.HTMLAttributes<HTMLHeadingElement>;\r\n\r\ntype Ref = React.Ref<HTMLHeadingElement>;\r\n\r\nexport const Title = React.forwardRef(\r\n  ({ children, className, ...rest }: TitlePropsType, ref?: Ref) => {\r\n    useEffect(() => {\r\n      document.title = children;\r\n      return () => {\r\n        document.title = \"Shop\";\r\n      };\r\n    }, [children]);\r\n\r\n    return (\r\n      <h1 ref={ref} className={`${className ?? \"\"} title`} {...rest}>\r\n        {children}\r\n      </h1>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nexport const Button = ({ children, className, ...rest }: React.ButtonHTMLAttributes<HTMLButtonElement>) => {\r\n  return <button className={`button ${className ?? \"\"}` } {...rest}>{children}</button>;\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Button } from \"components/Button\";\r\nimport { addProduct } from \"features/Cart/cartSlice\"\r\nimport \"./Product.scss\";\r\n\r\ntype ProductType = {\r\n  name: string;\r\n  image: string;\r\n  price: number;\r\n  id: string;\r\n};\r\n\r\nexport const Product = (product: ProductType) => {\r\n  const { name, image, price } = product;\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <section className=\"product\">\r\n      <p className=\"product__image-wrapper\">\r\n        <img className=\"product__image\" src={image} alt={name} />\r\n      </p>\r\n      <h3 className=\"product__title\">{name}</h3>\r\n      <p className=\"product__bottom\">\r\n        <strong className=\"product__price\">{price}$</strong>\r\n        <Button onClick={()=>{dispatch(addProduct(product))}}>Добавить в корзину</Button>\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader = (props: React.HTMLProps<HTMLElement>) => {\r\n  return <b {...props}>loading...</b>;\r\n};\r\n","export const api = {};\r\n\r\nexport const getAllProducts = async () => {\r\n  const result = await fetch(\r\n    \"https://murmuring-tor-81614.herokuapp.com/api/goods/\"\r\n  );\r\n\r\n  return result.json();\r\n};\r\n\r\nexport const getProductsByDealersId = async (dealers: string[]) => {\r\n  if (dealers.length === 0) {\r\n    return [];\r\n  }\r\n  const result = await fetch(\r\n    `https://murmuring-tor-81614.herokuapp.com/api/goods/?dealers=${dealers.join()}`\r\n  );\r\n\r\n  return result.json();\r\n};\r\n\r\nexport const getAllDealersId = async () => {\r\n  const result = await fetch(\r\n    `https://murmuring-tor-81614.herokuapp.com/api/dealers/`\r\n  );\r\n\r\n  return result.json();\r\n};\r\n","// import { nanoid } from \"@reduxjs/toolkit\";\r\n\r\n// const unicIdCache = new Set();\r\n// /*страховка на случай рандомной генерации повторяющегося ключа*/\r\n// const generateUnicId = () => {\r\n//   let id;\r\n//   do {\r\n//     id = nanoid();\r\n//   } while (unicIdCache.has(id)); // Сложность функции set.has - O(1);\r\n\r\n//   return id;\r\n// };\r\n\r\ntype rawProductDataType = {\r\n  name: string;\r\n  image: string;\r\n  price: number;\r\n};\r\n\r\nexport const productAdapter = (rawProductsData: rawProductDataType[]) => {\r\n  return rawProductsData.map((rawProductData, index) => ({\r\n    ...rawProductData,\r\n    image: `https://murmuring-tor-81614.herokuapp.com${rawProductData.image}`,\r\n    id: rawProductData.name + index,\r\n  }));\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { AppThunk, RootState } from \"../../app/store\";\r\nimport { getAllProducts, getProductsByDealersId } from \"./api\";\r\nimport { productAdapter } from \"./utils/adapters\"\r\n\r\nexport type ProductType = {\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  id: string\r\n};\r\n\r\ntype InitialStateType = {\r\n  dealers: string[],\r\n  products: ProductType[];\r\n  isLoading: boolean;\r\n  error: null | string;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  dealers: [],\r\n  products: [],\r\n  isLoading: true,\r\n  error: null,\r\n};\r\n\r\nconst productListSlice = createSlice({\r\n  name: \"productList\",\r\n  initialState,\r\n  reducers: {\r\n    setErrorStarus(state, action: PayloadAction<string | null>) {\r\n      state.error = action.payload;\r\n    },\r\n\r\n    setLoadingStatus(state, action: PayloadAction<boolean>) {\r\n      state.isLoading = action.payload;\r\n    },\r\n\r\n    setDealers(state, action: PayloadAction<string[]>) {\r\n      state.dealers = action.payload;\r\n    },\r\n\r\n    changeProductsList(state, action: PayloadAction<ProductType[]>) {\r\n      state.products = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  changeProductsList,\r\n  setErrorStarus,\r\n  setLoadingStatus,\r\n  setDealers,\r\n} = productListSlice.actions;\r\n\r\nexport const productsListReducer = productListSlice.reducer;\r\n\r\nexport const selectProductsList = (state: RootState) => state.productsList.products;\r\nexport const selectDealers = (state: RootState) => state.productsList.dealers;\r\nexport const selectLoadingStatus = (state: RootState) => state.productsList.error;\r\nexport const selectError = (state: RootState) => state.productsList.error;\r\n\r\nexport const productInit = (): AppThunk => async (dispatch, getState) => {\r\n  const { productsList } =  getState();\r\n  \r\n  if(productsList.dealers.length > 0) {\r\n    dispatch(receiveProductsByDealersId(productsList.dealers));\r\n  } else {\r\n    dispatch(receiveAllProducts());\r\n  }\r\n}\r\n\r\nexport const receiveAllProducts = (): AppThunk => async (dispatch) => {\r\n  try {\r\n    setLoadingStatus(true)\r\n    const rawProducts = await getAllProducts();\r\n    const adaptedProducts = productAdapter(rawProducts);\r\n  \r\n    dispatch(changeProductsList(adaptedProducts));\r\n    dispatch(setErrorStarus(null))\r\n  } catch (err) {\r\n    setErrorStarus(err.toString())\r\n  } finally {\r\n    setLoadingStatus(false)\r\n  }\r\n};\r\n\r\nexport const receiveProductsByDealersId = (dealers: string[]): AppThunk => async (dispatch) => {\r\n  try {\r\n    setLoadingStatus(true)\r\n    const rawProducts = await getProductsByDealersId(dealers);\r\n    const adaptedProducts = productAdapter(rawProducts);\r\n  \r\n    dispatch(changeProductsList(adaptedProducts));\r\n    dispatch(setErrorStarus(null))\r\n  } catch (err) {\r\n    setErrorStarus(err.toString())\r\n  } finally {\r\n    setLoadingStatus(false)\r\n  }\r\n};","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Product } from \"../Product\";\r\nimport { Loader } from \"components/Loader\";\r\nimport {\r\n  selectProductsList,\r\n  selectLoadingStatus,\r\n  productInit,\r\n} from \"../../productListSlice\";\r\nimport \"./ProductList.scss\";\r\n\r\nexport const ProductList = () => {\r\n  const productList = useSelector(selectProductsList);\r\n  const isLoading = useSelector(selectLoadingStatus);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(productInit());\r\n  }, [dispatch]);\r\n\r\n  return isLoading ? (\r\n    <Loader />\r\n  ) : (\r\n    <ul className=\"product-list\">\r\n      {productList.map((product) => {\r\n        return (\r\n          <li key={product.id}>\r\n            <Product {...product} />\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Title } from \"features/Title\";\r\nimport { ProductList } from \"features/ProductList\"\r\n\r\nexport const HomePage = () => {\r\n  return (\r\n    <section className=\"container\">\r\n      <Title>Магазин отличных товаров!</Title>\r\n      <ProductList />\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./CartCounter.scss\";\r\n\r\ntype CartCounterType = {\r\n  amount: number,\r\n  increase: () => void,\r\n  decrease: () => void,\r\n}\r\n\r\nexport const CartCounter = ({amount, increase, decrease}:CartCounterType) => {\r\n  return (\r\n    <div className=\"cart-counter\">\r\n      <button className=\"cart-counter__button\" onClick={decrease}>-</button>\r\n      <span className=\"cart-counter__number\">{amount}</span>\r\n      <button className=\"cart-counter__button\" onClick={increase}>+</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { CartCounter } from \"../CartCounter\";\r\nimport { incrementProductAmountById, decrementProductAmountById, deleteProductById, CartProductType } from \"../../cartSlice\"\r\nimport \"./CartProduct.scss\";\r\nimport { shallowCompare } from \"utils\";\r\n\r\n\r\nexport const CartProduct = React.memo(({name, amount, price, id, image}: CartProductType) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <section className=\"cart-product\">\r\n      <button className=\"cart-product__delete\" onClick={()=>dispatch(deleteProductById(id))}>Удалить</button>\r\n      <p className=\"cart-product__image-wrapper\">\r\n        <img className=\"cart-product__image\" src={image} alt={name} />\r\n      </p>\r\n      <div className=\"cart-product__content\">\r\n        <h3 className=\"cart-product__title\">{name}</h3>\r\n        <div className=\"cart-product__bottom\">\r\n          <strong className=\"cart-product__price\">Цена: {price}$</strong>\r\n          <div className=\"cart-product__counter\">\r\n            <CartCounter \r\n              amount={amount}\r\n              increase={()=>{\r\n                dispatch( incrementProductAmountById(id) )\r\n              }}\r\n              decrease={()=>{\r\n                dispatch( decrementProductAmountById(id) )\r\n              }}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}, shallowCompare);\r\n","import React from \"react\";\r\n\r\nimport \"./VisuallyHidden.scss\";\r\n\r\ntype VisuallyHiddenType = {\r\n  children: string;\r\n};\r\n\r\nexport const VisuallyHidden = ({ children }: VisuallyHiddenType) => {\r\n  return <span className=\"visually-hidden\">{children}</span>;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport { VisuallyHidden } from \"components/VisuallyHidden\";\r\nimport \"./Modal.scss\";\r\n\r\ntype ModalType = {\r\n  isOpen: boolean;\r\n  closeModal: () => any;\r\n  children: React.ReactChild;\r\n};\r\n\r\nexport const Modal = ({ isOpen, children, closeModal }: ModalType) => {\r\n  const [el] = useState<HTMLDivElement>(document.createElement(\"div\"));\r\n\r\n  useEffect(() => {\r\n    const modalRoot =\r\n      document.getElementById(\"modal-root\") ||\r\n      document.getElementById(\"root\") ||\r\n      document.body;\r\n\r\n    modalRoot.appendChild(el);\r\n\r\n    return () => {\r\n      modalRoot.removeChild(el);\r\n    };\r\n  }, [el]);\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = isOpen ? \"hidden\" : \"\";\r\n    return () => {\r\n      document.body.style.overflow = \"\";\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return isOpen\r\n    ? createPortal(\r\n        <div className=\"modal\">\r\n          <div className=\"modal__shadow\" onClick={closeModal}></div>\r\n          <div className=\"modal__body\">\r\n            {children}\r\n            <button className=\"modal__close-button\" onClick={closeModal}>\r\n              <VisuallyHidden>Закрыть модальное окно</VisuallyHidden>\r\n            </button>\r\n          </div>\r\n        </div>,\r\n        el\r\n      )\r\n    : null;\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./CartModal.scss\";\r\n\r\nexport const CartModal = () => {\r\n  return (\r\n    <div className=\"cart-modal\">\r\n      <h3 className=\"cart-modal__title\">Ваш заказ успешно формлен!</h3>\r\n      <p className=\"cart-modal__text\">Спасибо за покупку</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { CartProduct } from \"../CartProduct/\";\r\nimport { Button } from \"components/Button\";\r\nimport { Modal } from \"components/Modal\";\r\nimport { CartModal } from \"../CartModal\";\r\nimport { selectCartProducts, selectCartTotalSum } from \"../../cartSlice\";\r\nimport \"./Cart.scss\";\r\n\r\ntype CartPropType = {};\r\n\r\nexport const Cart = (props: CartPropType) => {\r\n  const [openModal, setOpenModal] = useState<boolean>(false);\r\n  const products = useSelector(selectCartProducts);\r\n  const totalSum = useSelector(selectCartTotalSum);\r\n\r\n  return (\r\n    <section className=\"cart\">\r\n      {products.length === 0 ? (\r\n        <p className=\"cart__empty\">Ваша корзина пуста.</p>\r\n      ) : (\r\n        <>\r\n          <ul className=\"cart__list\">\r\n            {products.map((product) => {\r\n              return (\r\n                <li key={product.id} className=\"cart__item\">\r\n                  <CartProduct {...product}/>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          <hr className=\"cart__line\" />\r\n          <div className=\"cart__bottom-wrapper\">\r\n            <div className=\"cart__bottom\">\r\n              <strong className=\"cart__total\">Итого: {totalSum}$</strong>\r\n              <Button\r\n                className=\"cart__button\"\r\n                onClick={() => setOpenModal(true)}\r\n              >\r\n                Оформить заказ\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <Modal isOpen={openModal} closeModal={() => setOpenModal(false)}>\r\n            <CartModal />\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Title } from \"features/Title\";\r\nimport { Cart } from \"features/Cart\";\r\n\r\nexport const CartPage = () => {\r\n  return (\r\n    <section className=\"container\">\r\n      <Title>Корзина</Title>\r\n      <Cart />\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { DefalutLayout } from \"layouts/Default\";\r\nimport { HomePage } from \"pages/index\";\r\nimport { CartPage } from \"pages/cart\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <DefalutLayout>\r\n            <HomePage />\r\n          </DefalutLayout>\r\n        </Route>\r\n        <Route path=\"/cart\" exact>\r\n          <DefalutLayout>\r\n            <CartPage />\r\n          </DefalutLayout>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport { setDealers } from \"features/ProductList/productListSlice\"\r\n\r\nfunction init(dealers?: string[]) {\r\n  if(dealers) {\r\n    store.dispatch(setDealers(dealers));\r\n  } \r\n\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n\r\ninit();","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport { cartReducer } from \"features/Cart/cartSlice\"\r\nimport { productsListReducer } from \"features/ProductList/productListSlice\"\r\nimport debounce from \"lodash.debounce\";\r\n\r\nconst localState = JSON.parse(window.localStorage.getItem(\"localState\") ?? \"null\");\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    cart: cartReducer,\r\n    productsList: productsListReducer\r\n  },\r\n  preloadedState : localState ?? undefined\r\n});\r\n\r\nstore.subscribe(debounce(() => {\r\n  const serializedStore = JSON.stringify(store.getState());\r\n  window.localStorage.setItem(\"localState\", serializedStore);\r\n}, 250))\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n"],"sourceRoot":""}