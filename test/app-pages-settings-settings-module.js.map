{"version":3,"sources":["./src/app/features/settings-form/settings-form.module.ts","./node_modules/fast-memoize/src/index.js","./src/app/pages/settings/settings-routing.module.ts","./src/app/features/settings-form/components/settings-form/settings-form.component.ts","./src/app/features/settings-form/components/settings-form/settings-form.component.html","./src/app/features/settings-form/index.ts","./src/app/pages/settings/settings.component.ts","./src/app/pages/settings/settings.component.html","./src/app/pages/settings/settings.module.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4C;AACtC;AACM;;AAgBpD,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,mBAFlB,EAAE,YANJ;YACP,4DAAY;YACZ,kEAAmB;YACnB,uEAAU;SACX;mIAIU,kBAAkB,mBAV3B,uGAAqB,aAGrB,4DAAY;QACZ,kEAAmB;QACnB,uEAAU,aAEF,uGAAqB;;;;;;;;;;;;ACjBjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACC;;;AAExD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE;CAC3C,CAAC;AAMK,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBAHvB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,qBAAqB,uFAFtB,4DAAY;;;;;;;;;;;;;ACTxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACxB;AAGkC;AACP;AAErC;;;;;;;;ICOxB,wEAA4F;IAAA,uDAAmG;IAAA,qEAAe;;;IAAlH,0DAAmG;IAAnG,kXAAmG;;;IADjM,2EAAsG;IACpG,4IAA8M;IAChN,4DAAO;;;IAF6E,0EAAiB;IACpF,0DAA2E;IAA3E,qNAA2E;;;IAoBxF,wEAAuF;IAAA,+KAAqB;IAAA,qEAAe;;;IAC3H,wEAAoF;IAAA,uMAAyB;IAAA,qEAAe;;;IAC5H,wEAAwF;IAAA,uDAA+F;IAAA,qEAAe;;;IAA9G,0DAA+F;IAA/F,0WAA+F;;;IAHzL,2EAAkG;IAChG,kJAA2H;IAC3H,kJAA4H;IAC5H,kJAAsM;IACxM,4DAAO;;;IAJyE,0EAAiB;IAChF,0DAAsE;IAAtE,4MAAsE;IACtE,0DAAmE;IAAnE,yMAAmE;IACnE,0DAAuE;IAAvE,6MAAuE;;;IAWtF,wEAAuF;IAAA,+KAAqB;IAAA,qEAAe;;;IAC3H,wEAAsF;IAAA,qTAAkD;IAAA,qEAAe;;;IACvJ,wEAAwF;IAAA,uDAA+F;IAAA,qEAAe;;;IAA9G,0DAA+F;IAA/F,4WAA+F;;;IAHzL,2EAAkG;IAChG,mJAA2H;IAC3H,mJAAuJ;IACvJ,mJAAsM;IACxM,4DAAO;;;IAJyE,0EAAiB;IAChF,0DAAsE;IAAtE,4MAAsE;IACtE,0DAAqE;IAArE,2MAAqE;IACrE,0DAAuE;IAAvE,6MAAuE;;;IAvB9F,0EAA6E;IAC3E,uEAAwC;IACtC,4EAA0E;IACvE,uEAAsE;IAAC,kEAC1E;IAAA,4DAAQ;IACR,0EAAyC;IACvC,2EAAkH;IAClH,0HAIO;IACT,4DAAO;IACT,4DAAI;IACJ,uEAAwC;IACtC,4EAA0E;IACvE,wEAAsE;IAAC,wGAC1E;IAAA,4DAAQ;IACR,2EAAyC;IACvC,4EAAkH;IAClH,4HAIO;IACT,4DAAO;IACT,4DAAI;IACN,4DAAM;;;IArBW,0DAAyC;IAAzC,yGAAyC;IAChB,0DAA0C;IAA1C,6GAA0C;IAYnE,0DAAyC;IAAzC,yGAAyC;IAChB,0DAA0C;IAA1C,6GAA0C;;AD7BjF,MAAM,qBAAqB;IAwBhC,YAAoB,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;QAvBrC,gBAAW,GAAG,IAAI,wDAAS,CAAC;YACjC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAC7E,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACzD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC9F,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1G,iBAAiB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACtC,aAAa,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SACtC,CAAC;QASM,gBAAW,GAAiB,IAAI,CAAC;QAEjC,4BAAuB,GAAwB,IAAI,CAAC;QACpD,4BAAuB,GAAwB,IAAI,CAAC;QACpD,gCAA2B,GAAwB,IAAI,CAAC;QA8EhE,2EAA2E;QAC1D,wCAAmC,GAAG,mDAAO,CAAC,CAAE,QAAsC,EAAE,SAAuC,EAAY,EAAE;YAC5J,MAAM,aAAa,GAAG,QAAQ,IAAI,EAAE,CAAC;YACrC,MAAM,cAAc,GAAG,SAAS,IAAI,EAAE,CAAC;YACvC,OAAO,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC;QAC9F,CAAC,CAAC;IAhF8C,CAAC;IAfjD,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC;IAC9C,CAAC;IAED,IAAI,cAAc;QAChB,OAAO,IAAI,CAAC,mCAAmC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC5F,CAAC;IAWD,QAAQ;QACN,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAM,CAAC,mFAAgB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,UAAiB,EAAE,EAAE;YACxG,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;gBACxB,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;gBACnC,SAAS,EAAE,UAAU,CAAC,SAAS;gBAC/B,KAAK,EAAE,UAAU,CAAC,KAAK;gBACvB,KAAK,EAAE,UAAU,CAAC,KAAK;gBACvB,aAAa,EAAE,UAAU,CAAC,aAAa;gBACvC,iBAAiB,EAAE,UAAU,CAAC,iBAAiB;aAChD,CAAC,CAAC;YAEH,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;YAC5D,IAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YAEzD,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC;QAEnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,oBAA6B,EAAC,EAAE;YAChI,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,CAAC;YACpF,IAAI,CAAC,yBAAyB,CAAC,oBAAoB,CAAC;QACtD,CAAC,CAAC;QAEF,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,iBAAyB,EAAE,EAAE;YACnI,IAAI,CAAC,wBAAwB,CAAC,iBAAiB,CAAC;QAClD,CAAC,CACF;IACH,CAAC;IAED,wBAAwB,CAAC,iBAAyB;QAChD,IAAG,iBAAiB,KAAK,OAAO,EAAE;YAChC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;YAC5C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;SAC9C;QACD,IAAG,iBAAiB,KAAK,OAAO,EAAE;YAChC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;SAC7C;IACH,CAAC;IAED,0EAA0E;IAC1E,yBAAyB,CAAC,SAAkB;QAC1C,IAAG,CAAC,SAAS,EAAE;YACb,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;YAC7C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;SAC9C;IACH,CAAC;IAED,SAAS,CAAC,CAAQ;;QAChB,CAAC,CAAC,cAAc,EAAE,CAAC;QAEnB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrB,IAAI,QAAE,IAAI,CAAC,WAAW,0CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;YAC1C,SAAS,QAAE,IAAI,CAAC,WAAW,0CAAE,SAAS;YACtC,KAAK,QAAE,IAAI,CAAC,WAAW,0CAAE,KAAK;YAC9B,KAAK,QAAE,IAAI,CAAC,WAAW,0CAAE,KAAK;YAC9B,iBAAiB,QAAE,IAAI,CAAC,WAAW,0CAAE,iBAAiB;YACtD,aAAa,QAAE,IAAI,CAAC,WAAW,0CAAE,aAAa;SAC/C,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,gFAAgB,CAAC,gCAAK,IAAI,CAAC,WAAW,GAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAW,CAAC,CAAC,CAAC;QACxG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,wEAAQ,CAAC,gCAAK,IAAI,CAAC,WAAW,GAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAW,CAAC,CAAC,CAAC;QAChG,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;IAED,QAAQ,CAAC,QAA2B;QAClC,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC3B,CAAC;IASD,WAAW;;QACT,UAAI,CAAC,uBAAuB,0CAAE,WAAW,GAAG;QAC5C,UAAI,CAAC,uBAAuB,0CAAE,WAAW,GAAG;QAC5C,UAAI,CAAC,2BAA2B,0CAAE,WAAW,GAAG;IAClD,CAAC;;0FA9GU,qBAAqB;qGAArB,qBAAqB;QClBlC,0EAA0G;QAApD,iJAAS,qBAAiB,IAAC,qFAAW,gBAAY,IAAvB;QAC/E,8EAAsC;QACpC,uEAAwC;QACtC,0EAAwC;QACtC,+EACF;QAAA,4DAAO;QACP,0EAAgJ;QAClJ,4DAAI;QACJ,uEAAwC;QACtC,2EAAyC;QACvC,mHACF;QAAA,4DAAQ;QACR,0EAAyC;QACvC,2EAAyG;QACzG,qHAEO;QACT,4DAAO;QACT,4DAAI;QACN,4DAAW;QACX,uEAAK;QACH,0EAAgD;QAC9C,4EAAoC;QAClC,0HACA;QAAA,wEAA4F;QAC9F,4DAAQ;QACV,4DAAM;QACN,qHA2BM;QACR,4DAAM;QACN,yEAAyC;QACvC,kFAAgF;QAC9E,4EAAyC;QACvC,qKACF;QAAA,4DAAO;QACT,4DAAa;QACb,kFAAwG;QACtG,4EAAyC;QACvC,oHACF;QAAA,4DAAO;QACT,4DAAa;QACf,4DAAI;QACN,4DAAO;;QApEqB,sFAAyB;QAMF,0DAAwC;QAAxC,qGAAwC;QAOxE,0DAA6C;QAA7C,0GAA6C;QACpB,0DAA8C;QAA9C,8GAA8C;QAahF,0DAA2B;QAA3B,2FAA2B;QA8BrB,0DAAgB;QAAhB,yEAAgB;QAKhB,0DAAiB;QAAjB,0EAAiB;;;;;;;;;;;;;;AC9DjC;AAAA;AAAA;AAAA;AAA2D;;;;;;;;;;;;;;;;;;;ACOpD,MAAM,iBAAiB;;kFAAjB,iBAAiB;iGAAjB,iBAAiB;QCP9B,+EAAuC;;;;;;;;;;;;;;ACCvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACU;AACS;AACD;;AAW1D,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBARhB;YACP,4DAAY;YACZ,8EAAqB;YACrB,8EAAkB;SACnB;mIAIU,cAAc,mBAHV,qEAAiB,aAJ9B,4DAAY;QACZ,8EAAqB;QACrB,8EAAkB,aAGV,qEAAiB","file":"app-pages-settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingsFormComponent } from './components/settings-form/settings-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormModule } from '~/app/shared/form/form.module';\n\n\n\n@NgModule({\n  declarations: [\n    SettingsFormComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormModule,\n  ],\n  exports: [SettingsFormComponent],\n  providers: [],\n})\nexport class SettingsFormModule { }\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingsComponent } from \"./settings.component\"\n\nconst routes: Routes = [\n  { path: '', component: SettingsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { IUser } from '~/app/models/IUser.interface';\nimport { ChangeActiveUser, SaveUser } from '~/app/store/actions/user.actions';\nimport { selectActiveUser } from '~/app/store/selectors/user.selector';\nimport { IAppState } from '~/app/store/state/app.state';\nimport memoize from \"fast-memoize\"\n\n\n\n@Component({\n  selector: 'app-settings-form',\n  templateUrl: './settings-form.component.html',\n  styleUrls: ['./settings-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsFormComponent implements OnInit, OnDestroy {\n  public settingForm = new FormGroup({\n    name: new FormControl({value: \"\", disabled: true}, Validators.maxLength(200)),\n    pseudonym: new FormControl(\"\", Validators.maxLength(200)),\n    email: new FormControl(\"\", [Validators.maxLength(200), Validators.email, Validators.required]),\n    phone: new FormControl(\"\", [Validators.maxLength(11), Validators.pattern(/^89\\d*$/), Validators.required]),\n    notificationsType: new FormControl(\"\"),\n    notifications: new FormControl(false),\n  })\n  get isVisibleNotification(): boolean {\n    return this.settingForm.value.notifications;\n  }\n\n  get isChangingForm(): boolean {    \n    return this.firstObjHasSameValuesWidthSecondObj(this.settingForm.value, this._activeUser);\n  }\n\n  private _activeUser: IUser | null = null;\n\n  private _activeUserSubscription: Subscription | null = null; \n  private _notificationsSubscribe: Subscription | null = null;\n  private _notificationsTypeSubscribe: Subscription | null = null;\n\n\n  constructor(private _store: Store<IAppState>) { }\n\n  ngOnInit() {\n    this._activeUserSubscription = this._store.pipe(select(selectActiveUser)).subscribe((activeUser: IUser) => {      \n      this._activeUser = activeUser;\n      this.settingForm.setValue({\n        name: activeUser.name.slice(0, 200),\n        pseudonym: activeUser.pseudonym,\n        email: activeUser.email,\n        phone: activeUser.phone,\n        notifications: activeUser.notifications,\n        notificationsType: activeUser.notificationsType,\n      });\n\n      this.disableNotificationField(activeUser.notificationsType);\n      this.disableHiddenNotificatons(activeUser.notifications);\n\n      typeof this.settingForm.controls[\"notifications\"]\n\n    });\n\n    this._notificationsSubscribe = this.settingForm.controls[\"notifications\"].valueChanges.subscribe((visibleNotifications: boolean)=> {\n      this.disableNotificationField(this.settingForm.controls[\"notificationsType\"].value);\n      this.disableHiddenNotificatons(visibleNotifications)\n    })\n\n    this._notificationsTypeSubscribe = this.settingForm.controls[\"notificationsType\"].valueChanges.subscribe((notificationsType: string) => {\n        this.disableNotificationField(notificationsType)\n      }\n    )\n  }\n\n  disableNotificationField(notificationsType: string): void {\n    if(notificationsType === \"email\") {\n      this.settingForm.controls[\"email\"].enable();\n      this.settingForm.controls[\"phone\"].disable();\n    }\n    if(notificationsType === \"phone\") {\n      this.settingForm.controls[\"email\"].disable();\n      this.settingForm.controls[\"phone\"].enable();\n    }\n  }\n\n  // Блокировка скрытых инпутов для отмены валидации невидимых клиенту полей\n  disableHiddenNotificatons(isVisible: boolean): void {\n    if(!isVisible) {\n      this.settingForm.controls[\"email\"].disable();\n      this.settingForm.controls[\"phone\"].disable();\n    }\n  }\n\n  resetForm(e: Event): void {\n    e.preventDefault();\n    \n    this.settingForm.reset({\n      name: this._activeUser?.name.slice(0, 200),\n      pseudonym: this._activeUser?.pseudonym,\n      email: this._activeUser?.email,\n      phone: this._activeUser?.phone,\n      notificationsType: this._activeUser?.notificationsType,\n      notifications: this._activeUser?.notifications,\n    });\n  }\n\n  submitForm(): void {\n    this._store.dispatch(new ChangeActiveUser({ ...this._activeUser, ...this.settingForm.value } as IUser));\n    this._store.dispatch(new SaveUser({ ...this._activeUser, ...this.settingForm.value } as IUser));\n    this.settingForm.markAsUntouched();\n    this.settingForm.markAsPristine();\n  }\n\n  hasError(errorObj?: Object | boolean): boolean {\n    return Boolean(errorObj);\n  }\n\n  // Функция создана для сравнения значений у формы и выбранного пользователя\n  private readonly firstObjHasSameValuesWidthSecondObj = memoize(( firstObj: {[ key:string ]: any} | null, secondObj: {[ key:string ]: any} | null ): boolean => {\n    const firstInnerObj = firstObj || {};\n    const secondInnerObj = secondObj || {};\n    return Object.entries(firstInnerObj).every(([key, value]) => secondInnerObj[key] === value);\n  })\n\n  ngOnDestroy() {\n    this._activeUserSubscription?.unsubscribe();\n    this._notificationsSubscribe?.unsubscribe();\n    this._notificationsTypeSubscribe?.unsubscribe();\n  }\n}\n","<form class=\"settings-form\" [formGroup]=\"settingForm\" (reset)=\"resetForm($event)\" (submit)=\"submitForm()\">\n  <fieldset class=\"settings-form__main\">\n    <p class=\"settings-form__input-wrapper\">\n      <span class=\"settings-form__input-name\">\n        ФИО \n      </span>\n      <app-input class=\"settings-form__text-input\" [inputFc]=\"settingForm.controls['name']\" [placeholder]=\"'Введите имя'\" [type]=\"'text'\"></app-input>\n    </p>\n    <p class=\"settings-form__input-wrapper\">\n      <label class=\"settings-form__input-name\">\n        Псевдоним\n      </label>\n      <span class=\"settings-form__text-input\" >\n        <app-input [inputFc]=\"settingForm.controls['pseudonym']\" [placeholder]=\"'Введите псевдоним'\"></app-input>\n        <span class=\"settings-form__error\" *ngIf=\"settingForm.controls['pseudonym'].errors\" [ngSwitch]=\"true\">\n          <ng-container *ngSwitchCase=\"hasError(settingForm.controls['pseudonym'].errors?.maxlength)\">Максимальная длинна {{settingForm.controls['pseudonym'].errors?.maxlength.requiredLength}} символов</ng-container>\n        </span>\n      </span>\n    </p>\n  </fieldset>\n  <div>\n    <div class=\"settings-form__notifications-check\">\n      <label class=\"settings-form__label\">\n        Оповещения\n        <input type=\"checkbox\" formControlName=\"notifications\" class=\"settings-form__notifications\">\n      </label>\n    </div>\n    <div *ngIf=\"isVisibleNotification\" class=\"settings-form__notifications-body\">\n      <p class=\"settings-form__input-wrapper\">\n        <label class=\"settings-form__input-name settings-form__input-name--label\">\n           <input type=\"radio\" formControlName=\"notificationsType\" value=\"email\"> Email\n        </label>\n        <span class=\"settings-form__text-input\" >\n          <app-input [inputFc]=\"settingForm.controls['email']\" [placeholder]=\"'Введите email'\" [type]=\"'email'\"></app-input>\n          <span class=\"settings-form__error\" *ngIf=\"settingForm.controls['email'].errors\" [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"hasError(settingForm.controls['email'].errors?.required)\">Это обязательное поле</ng-container>\n            <ng-container *ngSwitchCase=\"hasError(settingForm.controls['email'].errors?.email)\">Недопустимый формат почты</ng-container>\n            <ng-container *ngSwitchCase=\"hasError(settingForm.controls['email'].errors?.maxlength)\">Максимальная длинна {{settingForm.controls['email'].errors?.maxlength.requiredLength}} символов</ng-container>\n          </span>\n        </span>\n      </p>\n      <p class=\"settings-form__input-wrapper\">\n        <label class=\"settings-form__input-name settings-form__input-name--label\">\n           <input type=\"radio\" formControlName=\"notificationsType\" value=\"phone\"> Телефон\n        </label>\n        <span class=\"settings-form__text-input\" >\n          <app-input [inputFc]=\"settingForm.controls['phone']\" [placeholder]=\"'Введите телефон'\" [type]=\"'tel'\"></app-input>\n          <span class=\"settings-form__error\" *ngIf=\"settingForm.controls['phone'].errors\" [ngSwitch]=\"true\">\n            <ng-container *ngSwitchCase=\"hasError(settingForm.controls['phone'].errors?.required)\">Это обязательное поле</ng-container>\n            <ng-container *ngSwitchCase=\"hasError(settingForm.controls['phone'].errors?.pattern)\">телефон должен состоять из чисел и начинаться с 89</ng-container>\n            <ng-container *ngSwitchCase=\"hasError(settingForm.controls['phone'].errors?.maxlength)\">Максимальная длинна {{settingForm.controls['phone'].errors?.maxlength.requiredLength}} символов</ng-container>\n          </span>\n        </span>\n      </p>\n    </div>\n  </div>\n  <p class=\"settings-form__button-wrapper\">\n    <app-button [type]=\"'reset'\" [styleType]=\"'reject'\" [disabled]=\"isChangingForm\">\n      <span class=\"settings-form__button-text\">\n        Отменить изменения\n      </span>\n    </app-button>\n    <app-button [type]=\"'submit'\" [styleType]=\"'confirm'\" [disabled]=\"isChangingForm || !settingForm.valid\">\n      <span class=\"settings-form__button-text\">\n        Сохранить\n      </span>\n    </app-button>\n  </p>\n</form>","export { SettingsFormModule } from \"./settings-form.module\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent {}\n","<app-settings-form></app-settings-form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingsComponent } from './settings.component';\nimport { SettingsRoutingModule } from \"./settings-routing.module\";\nimport { SettingsFormModule } from \"~/app/features/settings-form\"\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    SettingsFormModule,\n  ],\n  declarations: [SettingsComponent],\n  exports: [SettingsComponent]\n})\nexport class SettingsModule { }\n"],"sourceRoot":"webpack:///"}