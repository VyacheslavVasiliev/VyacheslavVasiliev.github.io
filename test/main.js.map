{"version":3,"sources":["./src/app/features/header/header.module.ts","./src/app/features/connection/pipe/filter-services-by-string.pipe.ts","./src/app/store/reducers/user.reducers.ts","./src/app/features/connection/components/connection/connection.component.ts","./src/app/features/connection/components/connection/connection.component.html","./src/app/features/connection/pipe/services-price.pipe.ts","./src/environments/environment.ts","./src/app/shared/form/components/checkbox/checkbox.component.ts","./src/app/shared/form/components/checkbox/checkbox.component.html","./src/app/mockData/SERVICES.ts","./src/app/store/selectors/user.selector.ts","./src/app/features/header/index.ts","./src/app/features/connection/pipe/services-quantity.pipe.ts","./src/app/features/connection/components/available-services/available-services.component.ts","./src/app/features/connection/components/available-services/available-services.component.html","./src/app/mockData/USERS.ts","./src/app/pages/index/index-routing.module.ts","./src/app/features/connection/components/connected-services/connected-services.component.ts","./src/app/features/connection/components/connected-services/connected-services.component.html","./src/app/layouts/common-layout/common-layout-routing.module.ts","./src/app/shared/form/components/button/button.component.ts","./src/app/shared/form/components/button/button.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/features/connection/services/user-search.service.ts","./src/app/features/header/components/header/header.component.ts","./src/app/features/header/components/header/header.component.html","./src/app/layouts/common-layout/common-layout.component.ts","./src/app/layouts/common-layout/common-layout.component.html","./src/app/store/effects/user.effect.ts","./src/app/app.module.ts","./src/app/features/connection/components/users-list/users-list.component.ts","./src/app/features/connection/components/users-list/users-list.component.html","./src/app/features/connection/connection.module.ts","./src/app/features/connection/index.ts","./src/app/store/reducers/app.reducers.ts","./src/app/mockData/mock.service.ts","./src/app/shared/form/form.module.ts","./src/app/pages/index/index.module.ts","./src/app/store/actions/user.actions.ts","./src/app/pages/index/index.component.ts","./src/app/pages/index/index.component.html","./src/app/app-routing.module.ts","./src/app/layouts/common-layout/common-layout.module.ts","./src/app/shared/form/components/input/input.component.ts","./src/app/shared/form/components/input/input.component.html","./src/app/store/state/user.state.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEA;AAEwB;;AAchE,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,mBAFZ,EAAE,YALJ;YACP,4DAAY;YACZ,4DAAY;SACb;mIAIU,YAAY,mBATrB,mFAAe,aAGf,4DAAY;QACZ,4DAAY,aAEJ,mFAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVpB,MAAM,0BAA0B;IACrC,SAAS,CAAC,WAA2B,EAAE,EAAE,YAAqB;QAC5D,IAAG,YAAY,KAAK,SAAS,EAAE;YAC7B,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC;SACtE;QACD,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;IAC3G,CAAC;;oGANU,0BAA0B;sIAA1B,0BAA0B;;;;;;;;;;;;;ACNvC;AAAA;AAAA;AAAA;AAAoE;AACA;AAE7D,MAAM,WAAW,GAAG,CAAC,KAAK,GAAG,kEAAgB,EAAE,MAAmB,EAAe,EAAE;IACxF,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,KAAK,kEAAY,CAAC,SAAS,CAAC,CAAC;YAC3B,uCACK,KAAK,KACR,KAAK,EAAE,MAAM,CAAC,OAAO,IACtB;SACF;QAED,KAAK,kEAAY,CAAC,eAAe,CAAC,CAAC;YACjC,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACtD,uCACK,KAAK,KACR,eAAe,EAAE,SAAS,IAC3B;SACF;QAED,KAAK,kEAAY,CAAC,wBAAwB,CAAC,CAAC;YAC1C,uCACK,KAAK,KACR,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;oBACrC,IAAG,KAAK,KAAK,KAAK,CAAC,eAAe,EAAE;wBAClC,uCACK,IAAI,KACP,QAAQ,EAAE,MAAM,CAAC,OAAO,IACzB;qBACF;oBACD,OAAO,IAAI;gBACb,CAAC,CAAC,IACH;SACF;QAED,KAAK,kEAAY,CAAC,kBAAkB,CAAC,CAAC;YACpC,uCACK,KAAK,KACR,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;oBACrC,IAAG,KAAK,KAAK,KAAK,CAAC,eAAe,EAAE;wBAClC,OAAO,MAAM,CAAC,OAAO;qBACtB;oBACD,OAAO,IAAI;gBACb,CAAC,CAAC,IACH;SACF;QAED;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;AC3CM,MAAM,mBAAmB;;sFAAnB,mBAAmB;mGAAnB,mBAAmB;QCNhC,6EAA4B;QAC1B,yEAA0D;QACxD,4EAAiC;QACnC,4DAAM;QACN,yEAAyD;QACvD,uFAAwF;QACxF,oFAAiD;QACnD,4DAAM;QACR,4DAAU;;;;;;;;;;;;;;;;;;ACHH,MAAM,iBAAiB;IAC5B,SAAS,CAAC,WAA2B,EAAE;QACrC,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,EAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,EAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACxG,CAAC;;kFAHU,iBAAiB;oHAAjB,iBAAiB;;;;;;;;;;;;;ACN9B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAA8D;;;AAOvD,MAAM,iBAAiB;IAL9B;QAMW,eAAU,GAAqB,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;KAK7D;IAHC,IAAW,EAAE;QACX,OAAO,IAAI,CAAC,UAAyB;IACvC,CAAC;;kFALU,iBAAiB;iGAAjB,iBAAiB;QCR9B,wEAAO;QACL,sEAA2D;QAC3D,qEAAoC;QACtC,4DAAQ;;QAFkC,0DAAkB;QAAlB,+EAAkB;;;;;;;;;;;;;;ACE5D;AAAA;AAAO,MAAM,QAAQ,GAAmB;IACtC;QACE,IAAI,EAAE,cAAc;QACpB,KAAK,EAAE,GAAG;KACX;IACD;QACE,IAAI,EAAE,cAAc;QACpB,KAAK,EAAE,IAAI;QACX,cAAc,EAAE,IAAI,IAAI,EAAE;KAC3B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,KAAK,EAAE,CAAC;KACT;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,KAAK,EAAE,EAAE;KACV;IACD;QACE,IAAI,EAAE,aAAa;QACnB,KAAK,EAAE,IAAI;QACX,cAAc,EAAE,IAAI,IAAI,EAAE;KAC3B;CACF,CAAC;;;;;;;;;;;;;AC1BF;AAAA;AAAA;AAAA;AAAA;AAA6C;AAI7C,MAAM,gBAAgB,GAAG,CAAC,KAAgB,EAAe,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;AAEjE,MAAM,WAAW,GAAG,kEAAc,CACvC,gBAAgB,EAChB,CAAC,KAAkB,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CACpC,CAAC;AAEK,MAAM,gBAAgB,GAAG,kEAAc,CAC5C,gBAAgB,EAChB,CAAC,KAAkB,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAC3D,CAAC;AAEK,MAAM,wBAAwB,GAAG,kEAAc,CACpD,gBAAgB,EAChB,CAAC,KAAkB,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,QAAQ,CACpE,CAAC;;;;;;;;;;;;;ACnBF;AAAA;AAAA;AAAA;AAA+C;;;;;;;;;;;;;;;;;ACMxC,MAAM,oBAAoB;IAC/B,SAAS,CAAC,WAA2B,EAAE;QACrC,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAClG,CAAC;;wFAHU,oBAAoB;0HAApB,oBAAoB;;;;;;;;;;;;;ACLjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAEQ;AAG2B;AACN;;;;;;;;ICLvE,uEAAuE;IAAA,iMAAwB;IAAA,4DAAI;;;;IAEjG,qEAAuG;IACrG,2EAAyC;IACvC,8EAA0H;IAA9D,qcAAmD;IAA/G,4DAA0H;IAC1H,uDACA;IAAA,2EAA0E;IAAA,uDAAqB;IAAA,4DAAO;IACxG,4DAAQ;IACV,4DAAK;;;IAHD,0DACA;IADA,2FACA;IAA0E,0DAAqB;IAArB,6GAAqB;;ADShG,MAAM,0BAA0B;IAkBrC,YACU,MAAwB,EACxB,kBAAqC,EACrC,GAAsB;QAFtB,WAAM,GAAN,MAAM,CAAkB;QACxB,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,QAAG,GAAH,GAAG,CAAmB;QApBzB,kBAAa,GAAW,EAAE,CAAC;QAElC,UAAU;QACF,cAAS,GAAmB,EAAE,CAAC;QAC/B,sBAAiB,GAAsB,IAAI,GAAG,EAAE,CAAC;QAQzD,WAAW;QACH,yBAAoB,GAAwB,IAAI,CAAC;QACjD,uBAAkB,GAAwB,IAAI,CAAC;QAsB/C,6BAAwB,GAAG,qDAAO,CAAC,CAAC,QAAwB,EAAkB,EAAE,CAAE,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IAf7I,CAAC;IAhBJ,IAAI,iBAAiB;QACnB,OAAO,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IACD,IAAI,gBAAgB;QAClB,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;IACxE,CAAC;IAaD,QAAQ;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAM,CAAC,2FAAwB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAwB,EAAE,EAAE;YACpH,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,aAAqB,EAAE,EAAE;YACnG,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAID,aAAa,CAAC,QAAiB,EAAE,OAAqB;QACpD,IAAG,QAAQ,EAAE;YACX,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACrC;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SACxC;IACH,CAAC;IAED,KAAK;QACH,MAAM,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YACvD,IAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC;gBACrC,uCACK,OAAO,KACV,cAAc,EAAE,IAAI,IAAI,EAAE,IAC3B;aACF;YACD,OAAO,OAAO;QAChB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,qFAAqB,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrE,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;IACjC,CAAC;IAED,WAAW;;QACT,UAAI,CAAC,oBAAoB,0CAAE,WAAW,GAAG;QACzC,UAAI,CAAC,kBAAkB,0CAAE,WAAW,GAAG;IACzC,CAAC;;oGAhEU,0BAA0B;0GAA1B,0BAA0B;QCjBvC,sEAAK;QACH,wEAAsC;QAAA,oLAAqB;QAAA,4DAAK;QAChE,kHAAmG;QACnG,wEAAqC;QACnC,oHAMK;;QACP,4DAAK;QACL,yEAAgD;QAC9C,gFAAuH;QAAhD,sJAAS,WAAO,IAAC;QACtF,8JACF;QAAA,4DAAa;QACf,4DAAM;QACR,4DAAM;;QAfA,0DAA+B;QAA/B,+FAA+B;QAET,0DAAgE;QAAhE,8KAAgE;QASzC,0DAAuB;QAAvB,gFAAuB;;;;;;;;;;;;;;ACZ1E;AAAA;AAAA;AAAsC;AAE/B,MAAM,KAAK,GAAY;IAC5B;QACE,IAAI,EAAE,wBAAwB;QAC9B,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,EAAE;QACT,KAAK,EAAE,EAAE;QACT,aAAa,EAAE,KAAK;QACpB,iBAAiB,EAAE,OAAO;QAC1B,QAAQ,EAAE,kDAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAM,OAAO,EAAG,CAAC;KACpD;IACD;QACE,IAAI,EAAE,+BAA+B;QACrC,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,EAAE;QACT,KAAK,EAAE,EAAE;QACT,aAAa,EAAE,KAAK;QACpB,iBAAiB,EAAE,OAAO;QAC1B,QAAQ,EAAE,kDAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAM,OAAO,EAAG,CAAC;KACpD;IACD;QACE,IAAI,EAAE,wBAAwB;QAC9B,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,EAAE;QACT,KAAK,EAAE,EAAE;QACT,aAAa,EAAE,KAAK;QACpB,iBAAiB,EAAE,OAAO;QAC1B,QAAQ,EAAE,kDAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,mBAAM,OAAO,EAAG,CAAC;KACpD;CACF,CAAC;;;;;;;;;;;;;AC9BF;AAAA;AAAA;AAAA;AAAA;AAAuD;AACL;;;AAElD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAE;CACxC,CAAC;AAMK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;;;;;;;;;;;;;ACTxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACD;AAI6B;AACM;;;;;;;;;ICD7E,uEAAuE;IAAA,qLAAsB;IAAA,4DAAI;;;;IAE/F,wEAA8H;IAC5H,2EAAuC;IAAA,uDAA8C;;IAAA,4DAAO;IAC5F,uDACA;IAAA,2EAAwC;IACtC,uDACF;IAAA,4DAAO;IACP,iFAA8G;IAAxC,8XAAuC;IAC3G,8DACF;IAAA,4DAAa;IACf,4DAAK;;;IARoC,0DAA8C;IAA9C,yKAA8C;IACrF,0DACA;IADA,2FACA;IACE,0DACF;IADE,+GACF;IAC+C,0DAAsB;IAAtB,+EAAsB;;;IAPzE,wEAAsE;IACpE,yHASK;;IACP,4DAAK;;;IAVsD,0DAAmE;IAAnE,2LAAmE;;ADSzH,MAAM,0BAA0B;IASrC,YACU,MAAwB,EACxB,kBAAqC,EACrC,GAAsB;QAFtB,WAAM,GAAN,MAAM,CAAkB;QACxB,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,QAAG,GAAH,GAAG,CAAmB;QAXzB,mBAAc,GAAG,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;QAErC,sBAAiB,GAAmB,EAAE,CAAC;QACtC,wBAAmB,GAAmB,EAAE,CAAC;QAEzC,yBAAoB,GAAwB,IAAI,CAAC;QACjD,uBAAkB,GAAwB,IAAI,CAAC;IAMnD,CAAC;IAEL,UAAU;QACR,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAED,oBAAoB,CAAC,gBAA8B;QACjD,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YACzD,IAAG,OAAO,KAAK,gBAAgB,EAAE;gBAC/B,MAAM,kBAAkB,qBAAO,OAAO,CAAC,CAAC;gBACxC,OAAO,kBAAkB,CAAC,cAAc,CAAC;gBACzC,OAAO,kBAAkB;aAC1B;YACD,OAAO,OAAO,CAAC;QACjB,CAAC,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,qFAAqB,CAAC,WAAW,CAAC,CAAC;IAC9D,CAAC;IAEO,yBAAyB,CAAC,WAA2B,EAAE;QAC7D,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;IAC9D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAM,CAAC,2FAAwB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,QAAwB,EAAE,EAAE;YAClH,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;YACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;YAElE,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CACF,CAAC;QAEF;;;qGAG6F;QAC7F,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC;IAC9G,CAAC;IAED,WAAW;;QACT,UAAI,CAAC,kBAAkB,0CAAE,WAAW,GAAG;QACvC,UAAI,CAAC,oBAAoB,0CAAE,WAAW,GAAG;IAC3C,CAAC;;oGAvDU,0BAA0B;0GAA1B,0BAA0B;QCjBvC,sEAAK;QACH,wEAAsC;QAAA,wKAAmB;QAAA,4DAAK;QAC9D,uEAA6C;QAC3C,0EAAiI;QACjI,4EAA0G;QAAvB,kJAAS,gBAAY,IAAC;QAAC,4DAAC;QAAA,4DAAS;QACtH,4DAAI;QACJ,kHAAiG;QACjG,oHAWK;QACP,4DAAM;;QAhB2C,0DAA+B;QAA/B,uFAA+B;QAG1E,0DAA+B;QAA/B,+FAA+B;QAC9B,0DAA8B;QAA9B,8FAA8B;;;;;;;;;;;;;;ACNrC;AAAA;AAAA;AAAA;AAAA;AAAuD;AACU;;;AAEjE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8EAAqB,EAAE;CAC/C,CAAC;AAMK,MAAM,yBAAyB;;wGAAzB,yBAAyB;4KAAzB,yBAAyB,kBAH3B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,yBAAyB,uFAF1B,4DAAY;;;;;;;;;;;;;ACVxB;AAAA;AAAA;AAAuE;;;AAUhE,MAAM,eAAe;IAL5B;QAMY,UAAK,GAAG,IAAI,0DAAY,EAAS,CAAC;QACnC,SAAI,GAAgB,QAAQ,CAAC;QAC7B,aAAQ,GAAY,KAAK,CAAC;QAY3B,eAAU,GAAe,QAAQ,CAAC;QAEnC,iBAAY,GAAG;YACpB,gBAAgB,EAAE,KAAK;YACvB,iBAAiB,EAAE,KAAK;SACzB;KACF;IAjBC,IAAa,SAAS;QACpB,OAAO,IAAI,CAAC,UAAU;IACxB,CAAC;IACD,IAAI,SAAS,CAAC,KAAgB;QAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG;YAClB,gBAAgB,EAAE,IAAI,CAAC,UAAU,KAAK,QAAQ;YAC9C,iBAAiB,EAAE,IAAI,CAAC,UAAU,KAAK,SAAS;SACjD;IACH,CAAC;;8EAbU,eAAe;+FAAf,eAAe;;QCV5B,4EAMC;QAHC,6IAAS,sBAAkB,IAAC;QAI5B,6DAAyB;QAC3B,4DAAS;;QANP,0EAAsB;QAEtB,0EAAa;;;;;;;;;;;;;;ACFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;;;;AAQzD,MAAM,YAAY;IACvB,YAAoB,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;IAAG,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,4EAAY,EAAE,CAAC,CAAC;IAC3C,CAAC;;wEALU,YAAY;4FAAZ,YAAY;QCVzB,2EAA+B;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAA+B;;AAGxB,MAAM,iBAAiB;IAD9B;QAEE,mBAAc,GAAoB,IAAI,4CAAO,EAAU,CAAC;KACzD;;kFAFY,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB;;;;;;;;;;;;;;;;;;;;ACGvB,MAAM,eAAe;;8EAAf,eAAe;+FAAf,eAAe;QCP5B,4EAAuB;QACrB,yEAAyB;QACvB,wEAAyB;QACvB,wEAAyB;QACvB,uEAAyH;QAAA,qGAAO;QAAA,4DAAI;QACtI,4DAAK;QACL,wEAAyB;QACvB,uEAAiI;QAAA,iHAAS;QAAA,4DAAI;QAChJ,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAS;;QAP+E,0DAAwC;QAAxC,0JAAwC;QAGhC,0DAAwC;QAAxC,0JAAwC;;;;;;;;;;;;;;;;;;;;;;ACAjI,MAAM,qBAAqB;;0FAArB,qBAAqB;qGAArB,qBAAqB;QCPlC,2EAAgD;QAChD,2EAA+B;;;;;;;;;;;;;;ACA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AACpC;AACiB;AAI8C;;;;AAKlF,MAAM,UAAU;IACrB,YAAoB,SAAkB,EAAU,YAAyB;QAArD,cAAS,GAAT,SAAS,CAAS;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAEzE,kBAAa,GAAG,kEAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAClD,4DAAM,CAAe,kEAAY,CAAC,aAAa,CAAC,EAChD,gEAAS,CAAC,GAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,EAC5C,gEAAS,CAAC,CAAE,KAAc,EAAG,EAAE,CAAC,+CAAE,CAAC,IAAI,8DAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CACzD,CACF;QAED,cAAS,GAAG,kEAAY,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAC9C,4DAAM,CAAW,kEAAY,CAAC,SAAS,CAAC,EACxC,gEAAS,CAAC,CAAC,EAAC,OAAO,EAAC,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAC9D,EACD,EAAE,QAAQ,EAAE,KAAK,EAAE,CACpB;IAd2E,CAAC;;oEADlE,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;ACTpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AACc;AACjB;AAEc;AACT;AAEc;AACyB;AAC7B;AACX;AACiB;AACF;;;;;AAwBtD,MAAM,SAAS;;yFAAT,SAAS,cAFR,2DAAY;6IAEb,SAAS,mBAHT,EAAE,YAfJ;YACP,6BAA6B;YAC7B,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YAEX,0BAA0B;YAC1B,yEAAW;YACX,kGAAkB;YAElB,8BAA8B;YAC9B,uDAAW,CAAC,OAAO,CAAC,4EAAU,CAAC;YAC/B,2DAAa,CAAC,OAAO,CAAC,CAAC,0EAAU,CAAC,CAAC;YACnC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC,wEAAmB,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE;SAChE;oIAIU,SAAS,mBApBlB,2DAAY;QAGZ,6BAA6B;QAC7B,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QAEX,0BAA0B;QAC1B,yEAAW;QACX,kGAAkB;;;;;;;;;;;;;AC3BtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AAEqB;AACmB;;;;;;;;;ICHlF,wEAAmE;IACjE,yEAIC;IADC,4VAA6B;;IAE7B,wEAA8B;IAAA,uDAAa;IAAA,4DAAK;IAChD,uEAA4B;IAC1B,uEAAM;IAAA,uDAA2C;;IAAA,4DAAO;IACxD,uEAAM;IAAC,wDAA+C;;IAAA,4DAAO;IAC/D,4DAAI;IACN,4DAAM;IACR,4DAAK;;;;IAVwB,0DAAqE;IAArE,gOAAqE;IAIhE,0DAAa;IAAb,6EAAa;IAEnC,0DAA2C;IAA3C,2LAA2C;IAC1C,0DAA+C;IAA/C,6NAA+C;;ADEvD,MAAM,kBAAkB;IAI7B,YAAqB,MAAwB;QAAxB,WAAM,GAAN,MAAM,CAAkB;QAH7C,WAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAM,CAAC,8EAAW,CAAC,CAAC,CAAC;QAC/C,eAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAM,CAAC,mFAAgB,CAAC,CAAC;IAEN,CAAC;IAElD,aAAa,CAAE,IAAW;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,IAAI,6EAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC;;oFARU,kBAAkB;kGAAlB,kBAAkB;QCZ/B,wEAAuB;QACrB,8GAYK;;QACP,4DAAK;;QAb2C,0DAAmB;QAAnB,gJAAmB;;;;;;;;;;;;;;ACAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEoC;AACuB;AACA;AACxB;AACf;AACgB;AAC9B;AACgB;AACN;AACJ;;AAyBpD,MAAM,gBAAgB;;gGAAhB,gBAAgB;2JAAhB,gBAAgB,mBAFhB,CAAE,+EAAiB,CAAE,YANvB;YACP,4DAAY;YACZ,kEAAmB;YACnB,wEAAU;SACX;oIAIU,gBAAgB;QAnBzB,sBAAsB;QACtB,sHAA0B;QAC1B,sHAA0B;QAC1B,+FAAmB;QACnB,8FAAkB;QAElB,QAAQ;QACR,+FAA0B;QAC1B,iFAAoB;QACpB,2EAAiB,aAGjB,4DAAY;QACZ,kEAAmB;QACnB,wEAAU,aAEF,+FAAmB;;;;;;;;;;;;;AClC/B;AAAA;AAAA;AAAA;AAAsD;;;;;;;;;;;;;ACGtD;AAAA;AAAA;AAA8C;AAEvC,MAAM,UAAU,GAA4C;IACjE,KAAK,EAAG,0DAAW;CACpB;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAsC;AAEN;;AAKzB,MAAM,WAAW;IACtB,QAAQ;QACN,OAAO,+CAAE,CAAC,4CAAK,CAAC,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,IAAW;QAClB,OAAO,IAAI,+CAAU,CAAC,UAAU,CAAC,EAAE;;YACjC,IAAI,UAAU,GAAY,EAAE,CAAC;YAC7B,IAAI;gBACF,UAAU,GAAG,IAAI,CAAC,KAAK,OAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,mCAAI,IAAI,CAAC;aAC/D;YAAC,OAAM,CAAC,EAAE,GAAE;YAEb,MAAM,cAAc,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5E,IAAG,cAAc,IAAI,CAAC,EAAE;gBACtB,UAAU,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;aAC5C;iBAAM;gBACL,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;YAED,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;YAE1D,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;YACrB,UAAU,CAAC,QAAQ,EAAE;QACvB,CAAC,CAAC;IACJ,CAAC;;sEAxBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACqB;AACS;AACN;AAClB;;AAkB9C,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAfZ;YACP,4DAAY;YACZ,kEAAmB;SACpB;mIAYU,UAAU,mBAVnB,gFAAc;QACd,yFAAiB;QACjB,mFAAe,aANf,4DAAY;QACZ,kEAAmB,aAQnB,gFAAc;QACd,yFAAiB;QACjB,mFAAe;;;;;;;;;;;;;ACnBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEI;AACS;AACC;;AAWtD,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBARb;YACP,4DAAY;YACZ,wEAAkB;YAClB,yEAAgB;SACjB;mIAIU,WAAW,mBAHP,+DAAc,aAJ3B,4DAAY;QACZ,wEAAkB;QAClB,yEAAgB,aAGR,+DAAc;;;;;;;;;;;;;ACT1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAY,YAOX;AAPD,WAAY,YAAY;IACtB,+CAA+B;IAC/B,uCAAuB;IACvB,uCAAuB;IACvB,mDAAmC;IACnC,qEAAoD;IACpD,yDAAyC;AAC3C,CAAC,EAPW,YAAY,KAAZ,YAAY,QAOvB;AAEM,MAAM,YAAY;IAAzB;QACkB,SAAI,GAAG,YAAY,CAAC,aAAa,CAAC;IACpD,CAAC;CAAA;AAEM,MAAM,QAAQ;IAEnB,YAAmB,OAAc;QAAd,YAAO,GAAP,OAAO,CAAO;QADjB,SAAI,GAAG,YAAY,CAAC,SAAS,CAAC;IACV,CAAC;IAAA,CAAC;CACvC;AAEM,MAAM,QAAQ;IAEnB,YAAmB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QADnB,SAAI,GAAG,YAAY,CAAC,SAAS,CAAC;IACR,CAAC;IAAA,CAAC;CACzC;AAEM,MAAM,aAAa;IAExB,YAAmB,OAAc;QAAd,YAAO,GAAP,OAAO,CAAO;QADjB,SAAI,GAAG,YAAY,CAAC,eAAe,CAAC;IAChB,CAAC;IAAA,CAAC;CACvC;AAEM,MAAM,qBAAqB;IAEhC,YAAmB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;QAD1B,SAAI,GAAG,YAAY,CAAC,wBAAwB,CAAC;IAChB,CAAC;IAAA,CAAC;CAChD;AAEM,MAAM,gBAAgB;IAE3B,YAAmB,OAAc;QAAd,YAAO,GAAP,OAAO,CAAO;QADjB,SAAI,GAAG,YAAY,CAAC,kBAAkB,CAAC;IACnB,CAAC;IAAA,CAAC;CACvC;;;;;;;;;;;;;;;;;;;AClCM,MAAM,cAAc;;4EAAd,cAAc;8FAAd,cAAc;QCP3B,4EAAiC;;;;;;;;;;;;;;ACAjC;AAAA;AAAA;AAAA;AAAA;AAAoD;AACG;AACqC;;;AAE5F,MAAM,MAAM,GAAW;IACrB,kEAAkE;IAClE,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,wGAAqB,EAAE,QAAQ,EAAE;YACpD,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,yMAA8C,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,EAAE;YACpH,EAAE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,mHAAwC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE;SACpG;KACF;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,CAAC,+DAAS,EAAE,EAAC,CAAC,CAAC,EACtD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACdxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEkB;AACb;AACsB;;AAcnE,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,mBAFlB,EAAE,YANJ;YACP,4DAAY;YACZ,uFAAyB;YACzB,iEAAY;SACb;mIAIU,kBAAkB,mBAV3B,8EAAqB,aAGrB,4DAAY;QACZ,uFAAyB;QACzB,iEAAY,aAEJ,8EAAqB;;;;;;;;;;;;;ACfjC;AAAA;AAAA;AAAA;AAA8D;;;AASvD,MAAM,cAAc;IAL3B;QAMW,SAAI,GAAc,MAAM,CAAC;QACzB,gBAAW,GAAW,EAAE,CAAC;QACzB,YAAO,GAAoB,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC;KAKzD;IAHC,IAAW,EAAE;QACX,OAAO,IAAI,CAAC,OAAsB;IACpC,CAAC;;4EAPU,cAAc;8FAAd,cAAc;QCV3B,sEAKE;;QAHA,0EAAa;;;;;;;;;;;;;;ACKf;AAAA;AAAO,MAAM,gBAAgB,GAAkB;IAC7C,KAAK,EAAE,EAAE;IACT,eAAe,EAAE,CAAC;CACnB,CAAC;;;;;;;;;;;;;;;;;;;ACV6C;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\n\nimport { HeaderComponent } from \"./components/header/header.component\";\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [HeaderComponent],\n  providers: [],\n})\nexport class HeaderModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IServiceType } from '~/app/models/IServiceType.interface';\n\n@Pipe({\n  name: 'filterServicesByString'\n})\nexport class FilterServicesByStringPipe implements PipeTransform {\n  transform(services: IServiceType[] = [], filterString?: string): IServiceType[] {\n    if(filterString === undefined) {\n      throw new Error('filterServicesByString requires a string to filter')\n    }\n    return services.filter(service => service.name.toLowerCase().includes(filterString.toLocaleLowerCase()));\n  }\n}\n","import { EUserActions, UserActions } from \"../actions/user.actions\";\r\nimport { InitialUserState, IUsersState } from \"../state/user.state\";\r\n\r\nexport const userReducer = (state = InitialUserState, action: UserActions): IUsersState => {\r\n  switch (action.type) {\r\n    case EUserActions.SET_USERS: {\r\n      return {\r\n        ...state,\r\n        users: action.payload\r\n      }\r\n    }\r\n\r\n    case EUserActions.SET_ACTIVE_USER: {\r\n      const userIndex = state.users.indexOf(action.payload);\r\n      return {\r\n        ...state,\r\n        activeUserIndex: userIndex\r\n      }\r\n    }\r\n\r\n    case EUserActions.SET_ACTIVE_USER_SERVICES: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user, index) => {\r\n          if(index === state.activeUserIndex) {\r\n            return {\r\n              ...user,\r\n              services: action.payload \r\n            }\r\n          }\r\n          return user\r\n        })  \r\n      }\r\n    }\r\n\r\n    case EUserActions.CHANGE_ACTIVE_USER: {\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user, index) => {\r\n          if(index === state.activeUserIndex) {\r\n            return action.payload\r\n          }\r\n          return user\r\n        })\r\n      }\r\n    }\r\n\r\n    default : \r\n      return state;\r\n  }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-connection',\n  templateUrl: './connection.component.html',\n  styleUrls: ['./connection.component.scss']\n})\nexport class ConnectionComponent{}\n","\n<section class=\"connection\">\n  <div class=\"connection__cell connection__cell--user-list\">\n    <app-users-list></app-users-list>\n  </div>\n  <div class=\"connection__cell connection__cell--services\">\n    <app-connected-services class=\"connection__connected-services\"></app-connected-services>\n    <app-available-services></app-available-services>\n  </div>\n</section>","import { Pipe, PipeTransform } from '@angular/core';\nimport { IServiceType } from '~/app/models/IServiceType.interface';\n\n@Pipe({\n  name: 'servicesPrice'\n})\nexport class ServicesPricePipe implements PipeTransform {\n  transform(services: IServiceType[] = []): number {\n    return services.reduce((price, service) => service.connectionDate? (price + service.price): price, 0);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input } from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\n  @Input() checkboxFc : AbstractControl = new FormControl(\"\");\n  \n  public get fC () {\n    return this.checkboxFc as FormControl\n  }\n}\n","<label>\n  <input class=\"checkbox\" type=\"checkbox\" [formControl]=\"fC\">\n  <span class=\"checkbox__fake\"></span>\n</label>","import { IServiceType } from \"../models/IServiceType.interface\";\r\n\r\n\r\nexport const SERVICES: IServiceType[] = [\r\n  {\r\n    name: \"Какое-то имя\",\r\n    price: 100,\r\n  },\r\n  {\r\n    name: \"Еще одно имя\",\r\n    price: 1000,\r\n    connectionDate: new Date()\r\n  },\r\n  {\r\n    name: \"Очередное имя\",\r\n    price: 0,\r\n  },\r\n  {\r\n    name: \"Стандартное имя\",\r\n    price: 10,\r\n  },\r\n  {\r\n    name: \"Именное имя\",\r\n    price: 5000,\r\n    connectionDate: new Date(),\r\n  },\r\n];\r\n","import { createSelector } from \"@ngrx/store\";\r\nimport { IAppState } from \"../state/app.state\";\r\nimport { IUsersState } from \"../state/user.state\";\r\n\r\nconst selectUsersState = (state: IAppState): IUsersState => state.users;\r\n\r\nexport const selectUsers = createSelector(\r\n  selectUsersState,\r\n  (state: IUsersState) => state.users\r\n);\r\n\r\nexport const selectActiveUser = createSelector(\r\n  selectUsersState,\r\n  (state: IUsersState) => state.users[state.activeUserIndex]\r\n);\r\n\r\nexport const selectActiveUserServices = createSelector(\r\n  selectUsersState,\r\n  (state: IUsersState) => state.users[state.activeUserIndex].services\r\n);\r\n","export { HeaderModule } from \"./header.module\";","import { Pipe, PipeTransform } from '@angular/core';\nimport { IServiceType } from '~/app/models/IServiceType.interface';\n\n@Pipe({\n  name: 'servicesQuantity'\n})\nexport class ServicesQuantityPipe implements PipeTransform {\n  transform(services: IServiceType[] = []): number {\n    return services.reduce((quantity, service) => service.connectionDate ? ++quantity: quantity, 0);\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { default as memoize } from \"lodash.memoize\";\n\nimport { IServiceType } from '~/app/models/IServiceType.interface';\nimport { selectActiveUserServices } from '~/app/store/selectors/user.selector';\nimport { SetActiveUserServices } from '~/app/store/actions/user.actions';\nimport { IAppState } from '~/app/store/state/app.state';\nimport { UserSearchService } from '../../services/user-search.service';\n\n@Component({\n  selector: 'app-available-services',\n  templateUrl: './available-services.component.html',\n  styleUrls: ['./available-services.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AvailableServicesComponent implements OnInit, OnDestroy {\n  public serviceSearch: string = \"\";\n\n  // Сервисы\n  private _services: IServiceType[] = [];\n  private _selectedServices: Set<IServiceType> = new Set();\n  get avaliableServices(): IServiceType[] {\n    return this._availableServicesFilter(this._services);\n  }\n  get isDisabledButton():boolean {\n    return !this.avaliableServices.length || !this._selectedServices.size;\n  }\n\n  // Подписки\n  private _servicesSubsription: Subscription | null = null;\n  private _searchSubsription: Subscription | null = null;\n\n\n  constructor(\n    private _store: Store<IAppState>,\n    private _userSearchService: UserSearchService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    this._servicesSubsription = this._store.pipe(select(selectActiveUserServices)).subscribe((services: IServiceType[]) => {\n      this._services = services;\n      this._selectedServices.clear();\n      this.cdr.detectChanges();\n    });\n\n    this._searchSubsription = this._userSearchService.searchSubject$.subscribe((serviceSearch: string) => {\n      this.serviceSearch = serviceSearch;\n      this.cdr.detectChanges();\n    });\n  }\n\n  private _availableServicesFilter = memoize((services: IServiceType[]): IServiceType[] =>  services.filter(services => !services.connectionDate))\n\n  selectService(isSelect: boolean, service: IServiceType): void {\n    if(isSelect) {\n      this._selectedServices.add(service);\n    } else {\n      this._selectedServices.delete(service);\n    }\n  }\n\n  click(): void {\n    const newSelectedServices = this._services.map(service => {\n      if(this._selectedServices.has(service)){\n        return {\n          ...service,\n          connectionDate: new Date()\n        }\n      }\n      return service\n    });\n    this._store.dispatch(new SetActiveUserServices(newSelectedServices));\n    this._selectedServices.clear();\n  }\n\n  ngOnDestroy() {\n    this._servicesSubsription?.unsubscribe();\n    this._searchSubsription?.unsubscribe();\n  }\n}\n","<div>\n  <h3 class=\"available-services__title\">Дополнительные услуги</h3>\n  <p *ngIf=\"!avaliableServices.length\" class=\"available-services__empty\">нет дополнительных услуг</p>\n  <ul class=\"available-services__list\">\n    <li *ngFor=\"let service of (avaliableServices | filterServicesByString: serviceSearch); let i = index\">\n      <label class=\"available-services__label\">\n        <input class=\"available-services__checkbox\" type=\"checkbox\" (change)=\"selectService(checkbox.checked, service)\" #checkbox>\n        {{service.name}}\n        <span class=\"available-services__price\" class=\"available-services__price\">{{service.price}} руб</span>\n      </label>\n    </li>\n  </ul>\n  <div class=\"available-services__button-wrapper\">\n    <app-button class=\"available-services__button\" [styleType]=\"'confirm'\" (click)=\"click()\" [disabled]=\"isDisabledButton\">\n      Подключить услуги\n    </app-button>\n  </div>\n</div>\n","import { IUser } from \"~/app/models/IUser.interface\";\r\nimport { SERVICES } from \"./SERVICES\";\r\n\r\nexport const USERS: IUser[] = [\r\n  {\r\n    name: \"Эншпиль Раиса Ивановна\",\r\n    pseudonym: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    notifications: false,\r\n    notificationsType: 'email',\r\n    services: SERVICES.map(service => ({ ...service })),\r\n  },\r\n  {\r\n    name: \"Джугашвили Екатерина Андреева\",\r\n    pseudonym: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    notifications: false,\r\n    notificationsType: 'email',\r\n    services: SERVICES.map(service => ({ ...service })),\r\n  },\r\n  {\r\n    name: \"Иванов Петр Николаевич\",\r\n    pseudonym: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    notifications: false,\r\n    notificationsType: 'email',\r\n    services: SERVICES.map(service => ({ ...service })),\r\n  },\r\n];\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IndexComponent } from \"./index.component\"\n\nconst routes: Routes = [\n  { path: '', component: IndexComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IndexRoutingModule { }\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\n\nimport { IServiceType } from '~/app/models/IServiceType.interface';\nimport { SetActiveUserServices } from '~/app/store/actions/user.actions';\nimport { selectActiveUserServices } from '~/app/store/selectors/user.selector';\nimport { IAppState } from '~/app/store/state/app.state';\nimport { UserSearchService } from \"../../services/user-search.service\"\n\n@Component({\n  selector: 'app-connected-services',\n  templateUrl: './connected-services.component.html',\n  styleUrls: ['./connected-services.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConnectedServicesComponent implements OnInit, OnDestroy {\n  public servicesSearch = new FormControl('');\n\n  public connectedServices: IServiceType[] = [];\n  private _activeUserServices: IServiceType[] = [];\n\n  private _servicesSubsription: Subscription | null = null;\n  private _searchSubsription: Subscription | null = null;\n\n  constructor(\n    private _store: Store<IAppState>,\n    private _userSearchService: UserSearchService,\n    private cdr: ChangeDetectorRef\n  ) { }\n\n  dropSearch() {\n    this.servicesSearch.setValue(\"\");\n  }\n\n  removeServiceConnect(connectedService: IServiceType): void {\n    const newServices = this._activeUserServices.map(service => {\n      if(service === connectedService) {\n        const unconnectedService = {...service};\n        delete unconnectedService.connectionDate;\n        return unconnectedService\n      }\n      return service;\n    })\n\n    this._store.dispatch(new SetActiveUserServices(newServices))\n  }\n\n  private _connnectedServicesFilter(services: IServiceType[] = []): IServiceType[] {\n    return services.filter((service) => service.connectionDate);\n  }\n\n  ngOnInit() {\n    this._servicesSubsription = this._store.pipe(select(selectActiveUserServices)).subscribe((services: IServiceType[]) => {\n        this._activeUserServices = services;\n        this.connectedServices = this._connnectedServicesFilter(services);\n\n        this.cdr.detectChanges();\n      }\n    );\n\n    /* Здесь мы подписываемся на изменения в поисковой строке отдавая информацию Subject'у из сервиса поиска.\n      Subject же передает данные об изменении в поисковой строке другим компонентам, которые подписаны на него.\n      -----------------------------------------------\n      Проще и правильнее было бы использовать @Output() и @Input(), и не париться с Subject'ом */\n    this._searchSubsription = this.servicesSearch.valueChanges.subscribe(this._userSearchService.searchSubject$)\n  }\n\n  ngOnDestroy() {\n    this._searchSubsription?.unsubscribe();\n    this._servicesSubsription?.unsubscribe();\n  }\n\n}\n","<div>\n  <h3 class=\"connected-services__title\">Подключенные услуги</h3>\n  <p class=\"connected-services__input-wrapper\">\n    <app-input class=\"connected-services__input\" [inputFc]=\"this.servicesSearch\" [type]=\"'text'\" [placeholder]=\"'Поиск'\"></app-input>\n    <button class=\"connected-services__clear-btn\" aria-label=\"очистить поисковое поле\" (click)=\"dropSearch()\">X</button>\n  </p>\n  <p *ngIf=\"!connectedServices.length\" class=\"connected-services__empty\">нет подключенных услуг</p>\n  <ul *ngIf=\"connectedServices.length\" class=\"connected-services__list\">\n    <li class=\"connected-services__item\" *ngFor=\"let service of connectedServices | filterServicesByString: servicesSearch.value\">\n      <span class=\"connected-services__date\">{{service.connectionDate | date:'dd/MM/yyyy'}}</span>\n      {{service.name}}\n      <span class=\"connected-services__price\">\n        {{service.price}} руб\n      </span>\n      <app-button class=\"connected-services__delete\" [styleType]=\"'reject'\" (click)=\"removeServiceConnect(service)\">\n        X\n      </app-button>\n    </li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonLayoutComponent } from \"./common-layout.component\"\n\nconst routes: Routes = [\n  { path: '', component: CommonLayoutComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CommonLayoutRoutingModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\ntype ButtonType = \"button\" | \"reset\" | \"submit\";\ntype StyleType = \"reject\" | \"confirm\" | \"common\"\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n  @Output() click = new EventEmitter<Event>();\n  @Input() type : ButtonType = \"button\";\n  @Input() disabled: boolean = false;\n  @Input() get styleType(): StyleType {\n    return this._styleType\n  }\n  set styleType(value: StyleType) {\n    this._styleType = value;\n    this.dinamicStyle = {\n      'button--reject': this._styleType === \"reject\",\n      'button--confirm': this._styleType === \"confirm\"\n    }\n  }\n\n  private _styleType: StyleType  = \"common\";\n\n  public dinamicStyle = {\n    'button--reject': false,\n    'button--confirm': false\n  }\n}\n","<button\n  class=\"button\"\n  [class]=\"dinamicStyle\"\n  (click)=\"click.emit($event)\"\n  [type]=\"type\"\n  [disabled]=\"disabled\"\n>\n  <ng-content></ng-content>\n</button>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ReceiveUsers } from '~/app/store/actions/user.actions';\nimport { IAppState } from '~/app/store/state/app.state';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(private _store: Store<IAppState>) {}\n\n  ngOnInit() {\n    this._store.dispatch(new ReceiveUsers());\n  }\n}\n","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class UserSearchService {\n  searchSubject$: Subject<string> = new Subject<string>();\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {}\n","<header class=\"header\">\n  <nav class=\"header__nav\">\n    <ul class=\"header__list\">\n      <li class=\"header__item\">\n        <a routerLink=\"/\" class=\"header__link\" routerLinkActive=\"header__link--current\" [routerLinkActiveOptions]=\"{exact:true}\">Главная</a>\n      </li>\n      <li class=\"header__item\">\n        <a routerLink=\"/settings\" class=\"header__link\" routerLinkActive=\"header__link--current\" [routerLinkActiveOptions]=\"{exact:true}\">Настройки</a>\n      </li>\n    </ul>\n  </nav>\n</header>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-common-layout',\n  templateUrl: './common-layout.component.html',\n  styleUrls: ['./common-layout.component.scss']\n})\nexport class CommonLayoutComponent {}\n","<app-header class=\"layout__header\"></app-header>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { switchMap } from \"rxjs/operators\";\n\nimport { MockService } from '~/app/mockData/mock.service';\nimport { IUser } from '~/app/models/IUser.interface';\nimport { EUserActions, ReceiveUsers, SaveUser, SetUsers } from '../actions/user.actions';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserEffect {\n  constructor(private _actions$: Actions, private _mockService: MockService) {}\n\n  receiveUsers$ = createEffect(() => this._actions$.pipe(\n      ofType<ReceiveUsers>(EUserActions.RECEIVE_USERS),\n      switchMap(()=> this._mockService.getUsers()),\n      switchMap(( users: IUser[] ) => of(new SetUsers(users)))\n    )\n  )\n\n  saveUser$ = createEffect(() => this._actions$.pipe(\n      ofType<SaveUser>(EUserActions.SAVE_USER),\n      switchMap(({payload}) => this._mockService.saveUser(payload))\n    ),\n    { dispatch: false }\n  )\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreModule } from '@ngrx/store';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { IndexModule } from '~/app/pages/index/index.module';\nimport { CommonLayoutModule } from '~/app/layouts/common-layout/common-layout.module';\nimport { environment } from '~/environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { appReducer } from '~/app/store/reducers/app.reducers';\nimport { UserEffect } from '~/app/store/effects/user.effect';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    // Стандатные модули ангуляра\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n\n    // Модули страниц (/pages)\n    IndexModule,\n    CommonLayoutModule,\n\n    // Настройка глобального стора\n    StoreModule.forRoot(appReducer),\n    EffectsModule.forRoot([UserEffect]),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { IUser } from '~/app/models/IUser.interface';\nimport { SetActiveUser } from '~/app/store/actions/user.actions';\nimport { selectUsers, selectActiveUser } from '~/app/store/selectors/user.selector';\nimport { IAppState } from '~/app/store/state/app.state';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss']\n})\nexport class UsersListComponent {\n  users$ = this._store.pipe(select(selectUsers));\n  aciveUser$ = this._store.pipe(select(selectActiveUser))\n\n  constructor( private _store: Store<IAppState> ) {}\n\n  setActiveUser (user: IUser): void {\n    this._store.dispatch( new SetActiveUser(user));\n  }\n}\n","<ul class=\"users-list\">\n  <li class=\"users-list__item\" *ngFor=\"let user of (users$ | async)\">\n    <div\n      class=\"users-list__user\" [class]=\"{'users-list__user--active': user === (aciveUser$ | async)}\"\n      role=\"button\"\n      (click)=\"setActiveUser(user)\"\n    >\n      <h4 class=\"users-list__title\">{{user.name}}</h4>\n      <p class=\"users-list__info\">\n        <span>Услуг: {{user.services | servicesQuantity}}</span>\n        <span> аб плата: {{user.services | servicesPrice}} руб</span>\n      </p>\n    </div>\n  </li>\n</ul>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConnectionComponent } from './components/connection/connection.component';\nimport { ConnectedServicesComponent } from './components/connected-services/connected-services.component';\nimport { AvailableServicesComponent } from './components/available-services/available-services.component';\nimport { UsersListComponent } from './components/users-list/users-list.component';\nimport { UserSearchService } from './services/user-search.service';\nimport { FilterServicesByStringPipe } from './pipe/filter-services-by-string.pipe';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ServicesQuantityPipe } from './pipe/services-quantity.pipe';\nimport { ServicesPricePipe } from './pipe/services-price.pipe';\nimport { FormModule } from '~/app/shared/form/form.module';\n\n\n\n@NgModule({\n  declarations: [\n    // Компоненты features\n    ConnectedServicesComponent,\n    AvailableServicesComponent,\n    ConnectionComponent,\n    UsersListComponent,\n\n    // Пайпы\n    FilterServicesByStringPipe,\n    ServicesQuantityPipe,\n    ServicesPricePipe\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormModule,\n  ],\n  exports: [ConnectionComponent],\n  providers: [ UserSearchService ],\n})\nexport class ConnectionModule {}\n","export { ConnectionModule } from \"./connection.module\"","import { ActionReducerMap } from \"@ngrx/store\"\r\nimport { AppActions } from \"../actions/app,actions\";\r\nimport { IAppState } from \"../state/app.state\";\r\nimport { userReducer } from \"./user.reducers\";\r\n\r\nexport const appReducer: ActionReducerMap<IAppState, AppActions> = {\r\n  users : userReducer,\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IUser } from '~/app/models/IUser.interface';\nimport { USERS } from './USERS';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MockService {\n  getUsers(): Observable<IUser[]> {\n    return of(USERS);\n  }\n\n  saveUser(user: IUser): Observable<boolean> {\n    return new Observable(subscriber => {\n      let savedUsers: IUser[] = [];\n      try {\n        savedUsers = JSON.parse(localStorage.getItem(\"users\") ?? \"[]\")\n      } catch(e) {}\n      \n      const savedUserIndex = savedUsers.findIndex(({name}) => name === user.name);\n      if(savedUserIndex >= 0) {\n        savedUsers.splice(savedUserIndex, 1, user);\n      } else {\n        savedUsers.push(user);\n      }\n\n      localStorage.setItem(\"users\", JSON.stringify(savedUsers));\n\n      subscriber.next(true)\n      subscriber.complete()\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputComponent } from './components/input/input.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    InputComponent,\n    CheckboxComponent,\n    ButtonComponent,\n  ],\n  exports: [\n    InputComponent,\n    CheckboxComponent,\n    ButtonComponent,\n  ]\n})\nexport class FormModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IndexComponent } from './index.component';\nimport { IndexRoutingModule } from \"./index-routing.module\";\nimport { ConnectionModule } from \"~/app/features/connection\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IndexRoutingModule,\n    ConnectionModule,\n  ],\n  declarations: [IndexComponent],\n  exports: [IndexComponent]\n})\nexport class IndexModule {}\n","import { Action } from \"@ngrx/store\"\r\nimport { IServiceType } from \"~/app/models/IServiceType.interface\";\r\nimport { IUser } from \"~/app/models/IUser.interface\";\r\nimport { IUsersState } from \"../state/user.state\";\r\n\r\nexport enum EUserActions {\r\n  RECEIVE_USERS = \"RECEIVE_USERS\",\r\n  SAVE_USER = \"SAVE_USER\",\r\n  SET_USERS = \"SET_USERS\",\r\n  SET_ACTIVE_USER = \"SET_ACTIVE_USER\",\r\n  SET_ACTIVE_USER_SERVICES= \"SET_ACTIVE_USER_SERVICES\",\r\n  CHANGE_ACTIVE_USER = \"CHANGE_ACTIVE_USER\"\r\n}\r\n\r\nexport class ReceiveUsers implements Action {\r\n  public readonly type = EUserActions.RECEIVE_USERS;\r\n}\r\n\r\nexport class SaveUser implements Action {\r\n  public readonly type = EUserActions.SAVE_USER;\r\n  constructor(public payload: IUser) {};\r\n}\r\n\r\nexport class SetUsers implements Action {\r\n  public readonly type = EUserActions.SET_USERS;\r\n  constructor(public payload: IUser[]) {};\r\n}\r\n\r\nexport class SetActiveUser implements Action {\r\n  public readonly type = EUserActions.SET_ACTIVE_USER;\r\n  constructor(public payload: IUser) {};\r\n}\r\n\r\nexport class SetActiveUserServices implements Action {\r\n  public readonly type = EUserActions.SET_ACTIVE_USER_SERVICES;\r\n  constructor(public payload: IServiceType[]) {};\r\n}\r\n\r\nexport class ChangeActiveUser implements Action {\r\n  public readonly type = EUserActions.CHANGE_ACTIVE_USER;\r\n  constructor(public payload: IUser) {};\r\n}\r\n\r\n\r\n\r\nexport type UserActions = SetActiveUser | SetUsers | ChangeActiveUser | SetActiveUserServices;\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent {}\n","<app-connection></app-connection>","import { isDevMode, NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommonLayoutComponent } from '~/app/layouts/common-layout/common-layout.component';\n\nconst routes: Routes = [\n  // CommonLayoutComponent - стандартная обертка для модулей страниц\n  { path: '', component: CommonLayoutComponent, children: [\n      { path: 'settings', loadChildren: () => import(\"~/app/pages/settings/settings.module\").then(m => m.SettingsModule) },\n      { path: '', loadChildren: () => import(\"~/app/pages/index/index.module\").then(m => m.IndexModule) },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: !isDevMode()})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CommonLayoutComponent } from \"./common-layout.component\"\nimport { HeaderModule } from \"~/app/features/header\"\nimport { CommonLayoutRoutingModule } from \"./common-layout-routing.module\"\n\n@NgModule({\n  declarations: [\n    CommonLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    CommonLayoutRoutingModule,\n    HeaderModule,\n  ],\n  exports: [CommonLayoutComponent],\n  providers: []\n})\nexport class CommonLayoutModule { }\n","import { Component, Input } from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\n\ntype InputType = \"text\" | \"tel\" | \"email\"\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent {\n  @Input() type: InputType = \"text\";\n  @Input() placeholder: string = \"\";\n  @Input() inputFc: AbstractControl = new FormControl(\"\");\n\n  public get fC() {\n    return this.inputFc as FormControl\n  }\n}\n","<input\n  class=\"input\"\n  [type]=\"type\"\n  [formControl]=\"fC\"\n  [placeholder]=\"placeholder\"\n/>\n","import { IUser } from \"../../models/IUser.interface\";\r\n\r\nexport type IUsersState = {\r\n  users: IUser[],\r\n  activeUserIndex: number,\r\n}\r\n\r\nexport const InitialUserState : IUsersState =  {\r\n  users: [],\r\n  activeUserIndex: 0,\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}