{"version":3,"sources":["./src/app/utils/getAddressString.ts","./src/app/pipe/address/address.pipe.module.ts","./src/app/shared/loader/loader.module.ts","./src/app/shared/loader/loader.component.ts","./src/app/shared/loader/loader.component.html","./src/app/services/user.service.ts","./src/app/pipe/address/address.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAEA;AAAA;AAAO,SAAS,gBAAgB,CAAC,OAAiB;IAChD,OAAO,GAAG,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,KAAK,EAAE;AAC7D,CAAC;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAA6C;;AAMtC,MAAM,iBAAiB;;kFAAjB,iBAAiB;gGAAjB,iBAAiB;;mIAAjB,iBAAiB,mBAHb,yDAAW,aAChB,yDAAW;;;;;;;;;;;;;ACJvB;AAAA;AAAA;AAAA;AAAqD;;AAM9C,MAAM,YAAY;;wEAAZ,YAAY;2FAAZ,YAAY;;mIAAZ,YAAY,mBAHR,iEAAe,aACpB,iEAAe;;;;;;;;;;;;;;;;;ACEpB,MAAM,eAAe;;8EAAf,eAAe;+FAAf,eAAe;QCP5B,uEAAkB;QAAA,8GAAW;QAAA,4DAAI;;;;;;;;;;;;;;ACEjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACM;;;AAQ/C,MAAM,WAAW;IAEtB,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,4CAA4C,CAAC;aACxE,IAAI,CACH,iEAAU,CAAC,GAAG,CAAC,EAAE,CAAC,+CAAE,CAAC,EAAE,CAAC,CAAC,CAC1B;IACL,CAAC;IAED,WAAW,CAAE,EAAS;QACpB,OAAO,qDAAQ,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,iDAAiD,EAAE,EAAE,CAAC;YAC7E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,qDAAqD,EAAE,EAAE,CAAC;SAClF,CAAC,CAAC,IAAI,CACL,0DAAG,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,EAAC,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,EAAC,CAAC,CAAC,EACjD,iEAAU,CAAC,GAAG,CAAC,EAAE,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC,CAC5B;IACH,CAAC;;sEAnBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACPpB;AAAA;AAAA;AAAA;AAAgE;;AAKzD,MAAM,WAAW;IAEtB,SAAS,CAAC,OAAiB;QACzB,OAAO,oFAAgB,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;;sEAJU,WAAW;wGAAX,WAAW","file":"common.js","sourcesContent":["import { IAddress } from \"~/app/models/IAddress.interface\";\r\n\r\nexport function getAddressString(address: IAddress): string {\r\n  return `${address.city} ${address.street} ${address.suite}`\r\n}","import { NgModule } from '@angular/core';\nimport { AddressPipe } from './address.pipe';\n\n@NgModule({\n  declarations: [AddressPipe],\n  exports: [AddressPipe]\n})\nexport class AddressPipeModule { }\n","import { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n@NgModule({\n  declarations: [LoaderComponent],\n  exports: [LoaderComponent]\n})\nexport class LoaderModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent {}\n","<p class=\"loader\">Загрузка...</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { tap, catchError, map } from 'rxjs/operators';\nimport { IUser } from '~/app/models/IUser.interface';\nimport { IUserInfo } from '~/app/models/IUserInfo.inteface';\nimport { ITask } from '~/app/models/ITask.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http : HttpClient) { }\n\n  getUsers(): Observable<IUser[]> {\n    return this.http.get<IUser[]>(\"https://jsonplaceholder.typicode.com/users\")\n      .pipe(\n        catchError(err => of([]))\n      )\n  }\n\n  getUserInfo( id:string ): Observable<IUserInfo | null> {\n    return forkJoin([\n      this.http.get<IUser[]>(`https://jsonplaceholder.typicode.com/users?id=${id}`),\n      this.http.get<ITask[]>(`https://jsonplaceholder.typicode.com/todos?userId=${id}`),\n    ]).pipe(\n      map(([users, tasks])=> ({user: users[0], tasks})),\n      catchError(err => of(null))\n    )\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IAddress } from '~/app/models/IAddress.interface';\nimport { getAddressString } from '~/app/utils/getAddressString';\n\n@Pipe({\n  name: 'address'\n})\nexport class AddressPipe implements PipeTransform {\n\n  transform(address: IAddress): string {\n    return getAddressString(address);\n  }\n}\n"],"sourceRoot":"webpack:///"}